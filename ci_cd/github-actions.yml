name: AutoMLOps CI/CD Pipeline

# Trigger this workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to set up Python and install dependencies
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Adjust based on your requirements

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  # Job to test the application
  test:
    runs-on: ubuntu-latest
    needs: setup  # Wait for the setup job to finish

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run tests
      run: |
        pytest --maxfail=1 --disable-warnings -q  # Adjust your testing command if necessary

  # Job to build Docker image
  docker-build:
    runs-on: ubuntu-latest
    needs: test  # Wait for tests to pass before building the Docker image

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: |
        docker build -t automlops:${{ github.sha }} .

    - name: Push Docker image to Docker Hub (optional)
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag automlops:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/automlops:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/automlops:${{ github.sha }}

  # Job to deploy the application (e.g., to Kubernetes)
  deploy:
    runs-on: ubuntu-latest
    needs: docker-build  # Wait for the Docker build job to complete

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        kubectl-version: 'v1.21.2'

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/model-deployment.yaml

    - name: Check deployment status
      run: |
        kubectl rollout status deployment/model-deployment
